{"ast":null,"code":"var _jsxFileName = \"/Users/yousif.majid/Personal/fullstackopen/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\n\nconst Button = ({\n  clickHandler,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: clickHandler,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = ({\n  feedback,\n  count\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [feedback, \": \", count]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => setGood(good + 1);\n\n  const handleNeutral = () => setNeutral(neutral + 1);\n\n  const handleBad = () => setBad(bad + 1);\n\n  const totalReviews = good + neutral + bad;\n\n  const calculateAverage = () => {\n    if (totalReviews === 0) return 0;\n    const average = (good - bad) / totalReviews;\n    return average;\n  };\n\n  const percentagePositive = () => {\n    if (totalReviews === 0) return 0;\n    const percentagePositive = good / totalReviews;\n    return percentagePositive;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Give Feedback:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: handleGood,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: handleNeutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: handleBad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"Statistics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      feedback: \"Good\",\n      count: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      feedback: \"Neutral\",\n      count: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      feedback: \"Bad\",\n      count: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      feedback: \"Average\",\n      count: calculateAverage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      feedback: \"Positive\",\n      count: percentagePositive()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/yousif.majid/Personal/fullstackopen/part1/src/App.js"],"names":["React","useState","Header","text","Button","clickHandler","Statistics","feedback","count","App","good","setGood","neutral","setNeutral","bad","setBad","handleGood","handleNeutral","handleBad","totalReviews","calculateAverage","average","percentagePositive"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nconst Header = ({ text }) => {\n\treturn <h1>{text}</h1>;\n};\n\nconst Button = ({ clickHandler, text }) => {\n\treturn <button onClick={clickHandler}>{text}</button>;\n};\n\nconst Statistics = ({ feedback, count }) => {\n\treturn (\n\t\t<p>\n\t\t\t{feedback}: {count}\n\t\t</p>\n\t);\n};\n\nconst App = () => {\n\tconst [good, setGood] = useState(0);\n\tconst [neutral, setNeutral] = useState(0);\n\tconst [bad, setBad] = useState(0);\n\n\tconst handleGood = () => setGood(good + 1);\n\tconst handleNeutral = () => setNeutral(neutral + 1);\n\tconst handleBad = () => setBad(bad + 1);\n\tconst totalReviews = good + neutral + bad;\n\n\tconst calculateAverage = () => {\n\t\tif (totalReviews === 0) return 0;\n\t\tconst average = (good - bad) / totalReviews;\n\t\treturn average;\n\t};\n\n\tconst percentagePositive = () => {\n\t\tif (totalReviews === 0) return 0;\n\t\tconst percentagePositive = good / totalReviews;\n\t\treturn percentagePositive;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Header text=\"Give Feedback:\" />\n\t\t\t<Button clickHandler={handleGood} text=\"Good\" />\n\t\t\t<Button clickHandler={handleNeutral} text=\"Neutral\" />\n\t\t\t<Button clickHandler={handleBad} text=\"Bad\" />\n\t\t\t<Header text=\"Statistics:\" />\n\t\t\t<Statistics feedback=\"Good\" count={good} />\n\t\t\t<Statistics feedback=\"Neutral\" count={neutral} />\n\t\t\t<Statistics feedback=\"Bad\" count={bad} />\n\t\t\t<Statistics feedback=\"Average\" count={calculateAverage()} />\n\t\t\t<Statistics feedback=\"Positive\" count={percentagePositive()} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}