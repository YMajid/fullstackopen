{"ast":null,"code":"var _jsxFileName = \"/Users/yousif.majid/Personal/fullstackopen/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = ({\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Header;\n\nconst Button = ({\n  clickHandler,\n  text\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: clickHandler,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Button;\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad\n}) => {\n  const totalReviews = good + neutral + bad;\n  if (totalReviews === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No feedback given yet.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 33\n  }, this);\n\n  const calculateAverage = () => {\n    if (totalReviews === 0) return 0;\n    const average = (good - bad) / totalReviews;\n    return average;\n  };\n\n  const percentagePositive = () => {\n    if (totalReviews === 0) return 0;\n    const percentagePositive = good / totalReviews;\n    return percentagePositive;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good: \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Neutral: \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bad: \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average: \", calculateAverage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Positive: \", percentagePositive()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleGood = () => setGood(good + 1);\n\n  const handleNeutral = () => setNeutral(neutral + 1);\n\n  const handleBad = () => setBad(bad + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Give Feedback:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: handleGood,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: handleNeutral,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clickHandler: handleBad,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"Statistics:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/yousif.majid/Personal/fullstackopen/part1/src/App.js"],"names":["React","useState","Header","text","Button","clickHandler","Statistics","good","neutral","bad","totalReviews","calculateAverage","average","percentagePositive","App","setGood","setNeutral","setBad","handleGood","handleNeutral","handleBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,sBAAO;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAFD;;KAAMD,M;;AAIN,MAAME,MAAM,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBF,EAAAA;AAAhB,CAAD,KAA4B;AAC1C,sBAAO;AAAQ,IAAA,OAAO,EAAEE,YAAjB;AAAA,cAAgCF;AAAhC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAFD;;MAAMC,M;;AAIN,MAAME,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA4B;AAC9C,QAAMC,YAAY,GAAGH,IAAI,GAAGC,OAAP,GAAiBC,GAAtC;AAEA,MAAIC,YAAY,KAAK,CAArB,EAAwB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AAExB,QAAMC,gBAAgB,GAAG,MAAM;AAC9B,QAAID,YAAY,KAAK,CAArB,EAAwB,OAAO,CAAP;AACxB,UAAME,OAAO,GAAG,CAACL,IAAI,GAAGE,GAAR,IAAeC,YAA/B;AACA,WAAOE,OAAP;AACA,GAJD;;AAMA,QAAMC,kBAAkB,GAAG,MAAM;AAChC,QAAIH,YAAY,KAAK,CAArB,EAAwB,OAAO,CAAP;AACxB,UAAMG,kBAAkB,GAAGN,IAAI,GAAGG,YAAlC;AACA,WAAOG,kBAAP;AACA,GAJD;;AAKA,sBACC;AAAA,4BACC;AAAA,2BAAUN,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,8BAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAA,0BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAA,8BAAaE,gBAAgB,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA,+BAAcE,kBAAkB,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAzBD;;MAAMP,U;;AA2BN,MAAMQ,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACP,IAAD,EAAOQ,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUQ,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMQ,MAAN,IAAgBhB,QAAQ,CAAC,CAAD,CAA9B;;AAEA,QAAMiB,UAAU,GAAG,MAAMH,OAAO,CAACR,IAAI,GAAG,CAAR,CAAhC;;AACA,QAAMY,aAAa,GAAG,MAAMH,UAAU,CAACR,OAAO,GAAG,CAAX,CAAtC;;AACA,QAAMY,SAAS,GAAG,MAAMH,MAAM,CAACR,GAAG,GAAG,CAAP,CAA9B;;AAEA,sBACC;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAES,UAAtB;AAAkC,MAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEC,aAAtB;AAAqC,MAAA,IAAI,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEC,SAAtB;AAAiC,MAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YALD,eAMC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEb,IAAlB;AAAwB,MAAA,OAAO,EAAEC,OAAjC;AAA0C,MAAA,GAAG,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAND;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CAnBD;;GAAMK,G;;MAAAA,G;AAqBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Header = ({ text }) => {\n\treturn <h1>{text}</h1>;\n};\n\nconst Button = ({ clickHandler, text }) => {\n\treturn <button onClick={clickHandler}>{text}</button>;\n};\n\nconst Statistics = ({ good, neutral, bad }) => {\n\tconst totalReviews = good + neutral + bad;\n\n\tif (totalReviews === 0) return <p>No feedback given yet.</p>;\n\n\tconst calculateAverage = () => {\n\t\tif (totalReviews === 0) return 0;\n\t\tconst average = (good - bad) / totalReviews;\n\t\treturn average;\n\t};\n\n\tconst percentagePositive = () => {\n\t\tif (totalReviews === 0) return 0;\n\t\tconst percentagePositive = good / totalReviews;\n\t\treturn percentagePositive;\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<p>Good: {good}</p>\n\t\t\t<p>Neutral: {neutral}</p>\n\t\t\t<p>Bad: {bad}</p>\n\t\t\t<p>Average: {calculateAverage()}</p>\n\t\t\t<p>Positive: {percentagePositive()}</p>\n\t\t</div>\n\t);\n};\n\nconst App = () => {\n\tconst [good, setGood] = useState(0);\n\tconst [neutral, setNeutral] = useState(0);\n\tconst [bad, setBad] = useState(0);\n\n\tconst handleGood = () => setGood(good + 1);\n\tconst handleNeutral = () => setNeutral(neutral + 1);\n\tconst handleBad = () => setBad(bad + 1);\n\n\treturn (\n\t\t<div>\n\t\t\t<Header text=\"Give Feedback:\" />\n\t\t\t<Button clickHandler={handleGood} text=\"Good\" />\n\t\t\t<Button clickHandler={handleNeutral} text=\"Neutral\" />\n\t\t\t<Button clickHandler={handleBad} text=\"Bad\" />\n\t\t\t<Header text=\"Statistics:\" />\n\t\t\t<Statistics good={good} neutral={neutral} bad={bad} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}